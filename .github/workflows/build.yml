on:
  # temp for defbug, build on pr
  pull_request:
    branches:
      - main

  workflow_dispatch:
    inputs:
      PACKAGE_DIR:
        description: "set package dir to build and archive your package"
        required: true

jobs:
  build:
    name: 🛠️ build on ${{ matrix.platform }}

    strategy:
      fail-fast: true
      matrix:
        platform: [ubuntu-20.04, macos-11,]  #  windows-2022] windows is a bit sad :'(
    runs-on: ${{ matrix.platform }}

    # set bash to be a login shell, so that /etc/profile is sourced and conda
    # works
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v3

      - name: Install micromamba
        run: |
          if [[ "$(uname)" == "Linux" ]]; then
              PLATFORM="linux-64"
          elif [[ "$(uname)" == "Darwin" ]]; then
              PLATFORM="osx-64"
          else
              echo "Unsupported operating system"
              exit 1
          fi

          μMAMBA_VERSION=1.4.8-0
          curl -sSL https://github.com/mamba-org/micromamba-releases/releases/download/${μMAMBA_VERSION}/micromamba-${PLATFORM}.tar.bz2 | \
            tar -xjOf - bin/micromamba > /usr/local/bin/micromamba
          chmod +x /usr/local/bin/micromamba

          micromamba create base

          # very trashy- shove in the conda init crap into /etc/profile.
          # /etc/profile on mac doesn't auto-source /etc/profile.d files, so add
          # them explicitly
          micromamba shell hook --shell bash | sudo tee -a /etc/profile
          echo 'micromamba activate base' | sudo tee -a /etc/profile

      - name: Mamba info
        run: mamba info

      - name: Install mambabuild
        run: |
          # install mambabuild for faster builds
          micromamba install --yes --channel conda-forge boa==0.14.0 conda-package-handling==2.0.2

      # Conda build relies on using the 'file' protocol when manipulating
      # submodules that use a _relative_ ref (eg `../foo`), but this breaks due
      # to a recent patch to git for a CVE. This workaround is required right
      # now.
      #
      # https://vielmetti.typepad.com/logbook/2022/10/git-security-fixes-lead-to-fatal-transport-file-not-allowed-error-in-ci-systems-cve-2022-39253.html
      - name: Work around git CVE fix
        run: |
          git config --global protocol.file.allow always

      - name: Build package
        run: |
          # mac-only, we need to inject the macos sdk so conda can link against it
          # https://github.com/actions/runner-images/blob/main/images/macos/macos-11-Readme.md
          if command -v xcode-select; then
            export MACOSX_DEPLOYMENT_TARGET="10.15"
            export CONDA_BUILD_SYSROOT="$(xcode-select -p)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX${MACOSX_DEPLOYMENT_TARGET}.sdk"

            echo mac sysroot: ${CONDA_BUILD_SYSROOT}
          fi

          # store the output in an out of tree location
          mkdir -p ${{ github.event.inputs.PACKAGE_DIR }}.output
          conda mambabuild -c conda-forge --output-folder ${{ github.event.inputs.PACKAGE_DIR }}.output ${{ github.event.inputs.PACKAGE_DIR }}
          cph transmute '*.tar.bz2' ${{ github.event.inputs.PACKAGE_DIR }}.output

      # upload-artifact to save the output files
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.inputs.PACKAGE_DIR }}.${{ matrix.platform }}.packages
          path: ${{ github.event.inputs.PACKAGE_DIR }}.output
